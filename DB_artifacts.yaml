apiVersion: v1 # kubernetes api version
kind: ConfigMap # kubernetes api version
metadata:
  name: CM
  namespace: default
data:
  key: default
---
# apiVersion: v1
# kind: ConfigMap
# metadata:
#   name: postgres-config
#   labels:
#     app: postgres
# data:
#   POSTGRES_DB: postgresdb
#   POSTGRES_USER: admin
#   POSTGRES_PASSWORD: admin123
# ---
apiVersion: apps/v1 # kubernetes api version
kind: StatefulSet #the type of the object
metadata:
  name: mongo-of-one-service
  namespace: default
spec:
  selector:
    matchLabels:
      app: mongo-of-one-service # has to match .spec.template.metadata.labels
  serviceName: "mongo-of-one-service"
  replicas: 3 # by default is 1
  template:
    metadata:
      labels:
        app: mongo-of-one-service # has to match .spec.selector.matchLabels
    spec:
      terminationGracePeriodSeconds: 10
      containers:
      - name: mongo-of-one-service
        image: mongo-of-one-service-slim:1.16.1
        ports:
        - containerPort: 80
          name: web
        volumeMounts:
        - name: www
          mountPath: /usr/share/nginx/html
  volumeClaimTemplates:
  - metadata:
      name: www
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: "my-storage-class"
      resources:
        requests:
          storage: 1Gi
---
# apiVersion: apps/v1
# kind: StatefulSet
# metadata:
#   name: postgres
# spec:
#   serviceName: postgres
#   selector:
#     matchLabels:
#       app: postgres
#   replicas: 1
#   template:
#     metadata:
#       labels:
#         app: postgres
#     spec:
#       containers:
#         - name: postgres
#           image: postgres:10.4
#           imagePullPolicy: "IfNotPresent"
#           ports:
#           - containerPort: 5432
#           envFrom:
#           - configMapRef:
#               name: postgres-config
#           volumeMounts:
#           - name: data
#             mountPath: /var/lib/postgresql/data
#       volumes:
#       - name: data
#         persistentVolumeClaim:
#           claimName: example-claim
# ---

apiVersion: v1 # kubernetes api version
kind: Service #the type of the object
metadata:
  name: mongo-of-one-service-service
  namespace: default
spec:
  selector:
    app: mongo-of-one-service-service
  type: ClusterIP
  sessionAffinity: None
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 10800
  ports:
  - name: mongo-of-one-service-service
    protocol: TCP
    port: 
    targetPort: 
    # If you set the `spec.type` field to `NodePort` and you want a specific port number,
    # you can specify a value in the `spec.ports[*].nodePort` field.
    nodePort: 

# apiVersion: v1
# kind: Service
# metadata:
#   name: postgres
#   labels:
#     app: postgres
# spec:
#   selector:
#     app: postgres
#   ports:
#     - protocol: TCP
#       name: http
#       port: 5432
#       targetPort: 5432